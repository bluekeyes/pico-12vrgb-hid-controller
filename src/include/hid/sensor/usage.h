#ifndef HID_SENSOR_USAGE_H_
#define HID_SENSOR_USAGE_H_

/**
 * This file contains constants from the HID "Lighting and Illumination" usage
 * table. See Section 25 of the HID Usage Tables 1.3 document for details.
 */

#define HID_USAGE_PAGE_SENSOR 0x20

enum {
    HID_USAGE_SENSOR_TYPE_COLLECTION = 0x01,
    HID_USAGE_SENSOR_TYPE_ENVIRONMENTAL_TEMPERATURE = 0x33,

    HID_USAGE_SENSOR_STATE = 0x201,
    HID_USAGE_SENSOR_EVENT = 0x202,

    HID_USAGE_SENSOR_PROPERTY_SENSOR_CONNECTION_TYPE    = 0x309,
    HID_USAGE_SENSOR_PROPERTY_REPORTING_STATE           = 0x316,
    HID_USAGE_SENSOR_PROPERTY_POWER_STATE               = 0x319,
    HID_USAGE_SENSOR_PROPERTY_REPORT_INTERVAL           = 0x30E,

    HID_USAGE_SENSOR_DATA_ENVIRONMENTAL_TEMPERATURE = 0x434,

    HID_USAGE_SENSOR_STATE_UNDEFINED        = 0x800,
    HID_USAGE_SENSOR_STATE_READY            = 0x801,
    HID_USAGE_SENSOR_STATE_NOT_AVAILABLE    = 0x802,
    HID_USAGE_SENSOR_STATE_NO_DATA          = 0x803,
    HID_USAGE_SENSOR_STATE_INITIALIZING     = 0x804,
    HID_USAGE_SENSOR_STATE_ACCESS_DENIED    = 0x805,
    HID_USAGE_SENSOR_STATE_ERROR            = 0x806,

    HID_USAGE_SENSOR_EVENT_UNKNOWN              = 0x810,
    HID_USAGE_SENSOR_EVENT_STATE_CHANGED        = 0x811,
    HID_USAGE_SENSOR_EVENT_PROPERTY_CHANGED     = 0x812,
    HID_USAGE_SENSOR_EVENT_DATA_UPDATED         = 0x813,
    HID_USAGE_SENSOR_EVENT_POLL_RESPONSE        = 0x814,
    HID_USAGE_SENSOR_EVENT_CHANGE_SENSITIVITY   = 0x815,

    HID_USAGE_SENSOR_PROPERTY_CONNECTION_TYPE_PC_INTEGRATED = 0x830,
    HID_USAGE_SENSOR_PROPERTY_CONNECTION_TYPE_PC_ATTACHED   = 0x831,
    HID_USAGE_SENSOR_PROPERTY_CONNECTION_TYPE_PC_EXTERNAL   = 0x832,

    HID_USAGE_SENSOR_PROPERTY_REPORTING_STATE_REPORT_NO_EVENTS                  = 0x840,
    HID_USAGE_SENSOR_PROPERTY_REPORTING_STATE_REPORT_ALL_EVENTS                 = 0x841,
    HID_USAGE_SENSOR_PROPERTY_REPORTING_STATE_REPORT_THRESHOLD_EVENTS           = 0x842,
    HID_USAGE_SENSOR_PROPERTY_REPORTING_STATE_REPORT_WAKE_ON_NO_EVENTS          = 0x843,
    HID_USAGE_SENSOR_PROPERTY_REPORTING_STATE_REPORT_WAKE_ON_ALL_EVENTS         = 0x844,
    HID_USAGE_SENSOR_PROPERTY_REPORTING_STATE_REPORT_WAKE_ON_THRESHOLD_EVENTS   = 0x845,

    HID_USAGE_SENSOR_PROPERTY_POWER_STATE_UNDEFINED                     = 0x850,
    HID_USAGE_SENSOR_PROPERTY_POWER_STATE_D0_FULL_POWER                 = 0x851,
    HID_USAGE_SENSOR_PROPERTY_POWER_STATE_D1_LOW_POWER                  = 0x852,
    HID_USAGE_SENSOR_PROPERTY_POWER_STATE_D2_STANDBY_POWER_WITH_WAKE    = 0x853,
    HID_USAGE_SENSOR_PROPERTY_POWER_STATE_D3_SLEEP_WITH_WAKE            = 0x854,
    HID_USAGE_SENSOR_PROPERTY_POWER_STATE_D4_POWER_OFF                  = 0x855,
};

enum SensorState {
    SENSOR_STATE_UNDEFINED      = 0x0,
    SENSOR_STATE_READY          = 0x1,
    SENSOR_STATE_NOT_AVAILABLE  = 0x2,
    SENSOR_STATE_NO_DATA        = 0x3,
    SENSOR_STATE_INITIALIZING   = 0x4,
    SENSOR_STATE_ACCESS_DENIED  = 0x5,
    SENSOR_STATE_ERROR          = 0x6,
};

enum SensorEvent {
    SENSOR_EVENT_UNKNOWN            = 0x0,
    SENSOR_EVENT_STATE_CHANGED      = 0x1,
    SENSOR_EVENT_PROPERTY_CHANGED   = 0x2,
    SENSOR_EVENT_DATA_UPDATED       = 0x3,
    SENSOR_EVENT_POLL_RESPONSE      = 0x4,
    SENSOR_EVENT_CHANGE_SENSITIVITY = 0x5,
};

enum SensorConnectionType {
    SENSOR_CONNECTION_TYPE_PC_INTEGRATED    = 0x0,
    SENSOR_CONNECTION_TYPE_PC_ATTACHED      = 0x1,
    SENSOR_CONNECTION_TYPE_PC_EXTERNAL      = 0x2,
};

enum SensorReportingState {
    SENSOR_REPORTING_STATE_REPORT_NO_EVENTS                 = 0x0,
    SENSOR_REPORTING_STATE_REPORT_ALL_EVENTS                = 0x1,
    SENSOR_REPORTING_STATE_REPORT_THRESHOLD_EVENTS          = 0x2,
    SENSOR_REPORTING_STATE_REPORT_WAKE_ON_NO_EVENTS         = 0x3,
    SENSOR_REPORTING_STATE_REPORT_WAKE_ON_ALL_EVENTS        = 0x4,
    SENSOR_REPORTING_STATE_REPORT_WAKE_ON_THRESHOLD_EVENTS  = 0x5,
};

enum SensorPowerState {
    SENSOR_POWER_STATE_UNDEFINED                    = 0x0,
    SENSOR_POWER_STATE_D0_FULL_POWER                = 0x1,
    SENSOR_POWER_STATE_D1_LOW_POWER                 = 0x2,
    SENSOR_POWER_STATE_D2_STANDBY_POWER_WITH_WAKE   = 0x3,
    SENSOR_POWER_STATE_D3_SLEEP_WITH_WAKE           = 0x4,
    SENSOR_POWER_STATE_D4_POWER_OFF                 = 0x5,
};

#endif /* HID_SENSOR_USAGE_H_ */
